import java.io.IOException;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main {
    static int[] visited = new int[100001];
    public static void main(String[] args) throws IOException {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int K = scanner.nextInt();
        System.out.println(bfs(N,K));
    }
    static int bfs(int n, int k){
        Queue<Integer> q = new LinkedList<>();
        q.offer(n);
        visited[n] = 1;
        while (!q.isEmpty()){
            int v = q.poll();
            if(v == k){
                return visited[v]-1;
            }
            if(v-1 >=0 && visited[v-1] == 0) {
                q.offer(v-1);
                visited[v-1] = visited[v]+1;
            }
            if (v+1 <=100000 && visited[v+1] == 0) {
                q.offer(v+1);
                visited[v+1] = visited[v]+1;
            }
            if(v*2 <=100000 && visited[2*v] == 0) {
                q.offer(2*v);
                visited[2*v] = visited[v]+1;
            }
        }
        return -1;
    }
}