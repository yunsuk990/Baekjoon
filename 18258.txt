import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        int fp = -1;
        int bp = -1;
        int N = Integer.parseInt(br.readLine());
        int[] queue = new int[N];
        StringBuilder sb = new StringBuilder();

        for (int i = 0; i < N; i++) {
            StringTokenizer st = new StringTokenizer(br.readLine());
            switch (st.nextToken()) {
                case "push":
                    String num = st.nextToken();
                    queue[++bp] = Integer.parseInt(num);
                    break;

                case "pop":
                    if(fp != bp){
                        sb.append(queue[++fp]).append('\n');
                    }else{
                        sb.append(-1).append('\n');
                    }
                    break;

                case "size":
                    sb.append(bp-fp).append('\n');
                    break;

                case "empty":
                    if(fp != bp){
                        sb.append(0).append('\n');
                    }else{
                        sb.append(1).append('\n');
                    }
                    break;

                case "front":
                    if(fp != bp){
                        sb.append(queue[fp+1]).append('\n');
                    }else{
                        sb.append(-1).append('\n');
                    }
                    break;

                case "back":
                    if(fp != bp){
                        sb.append(queue[bp]).append('\n');
                    }else{
                        sb.append(-1).append('\n');
                    }
                    break;
            }
        }
        System.out.println(sb);
    }
}