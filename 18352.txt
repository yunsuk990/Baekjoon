import java.io.*;
import java.util.*;

public class Main {

    static boolean visited[];
    static int dis[];
    static ArrayList<Integer>[] graph;
    public static void main(String[] args) throws IOException {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int M = scanner.nextInt();
        int K = scanner.nextInt();
        int X = scanner.nextInt();
        boolean t = false;

        graph = new ArrayList[N+1];

        for(int i=0; i<=N; i++){
            graph[i] = new ArrayList<>();
        }
        visited = new boolean[N+1];
        dis = new int[N+1];
        for(int i=0; i<M; i++){
            int a = scanner.nextInt();
            int b = scanner.nextInt();
            graph[a].add(b);
        }

        bfs(X);
        for(int i = 1; i<=N; i++){
            if(dis[i] == K){
                t = true;
                System.out.println(i);
            }
        }
        if(!t){
            System.out.println(-1);
        }
    }
    static void bfs(int start){
        Queue<Integer> q = new LinkedList<>();
        q.add(start);
        visited[start] = true;
        while (!q.isEmpty()){
            int node = q.remove();
            for(int i : graph[node]){
                if(!visited[i]){
                    dis[i] += dis[node] + 1;
                    visited[i] = true;
                    q.add(i);
                }
            }
        }
    }
}