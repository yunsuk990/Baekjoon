import java.io.IOException;
import java.util.*;

public class Main {
    static int visited[];
    static int count = 1;
    static ArrayList<ArrayList<Integer>> graph = new ArrayList<>();
    public static void main(String[] args) throws IOException {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt(); //정점의 수
        int m = scanner.nextInt(); //간선의 수
        int r = scanner.nextInt(); //시작 정점

        visited = new int[n+1];

        for(int i=0; i<n+1; i++){
            graph.add(new ArrayList<>());
        }

        for(int i=0; i<m; i++){
            int u = scanner.nextInt();
            int v = scanner.nextInt();
            graph.get(u).add(v);
            graph.get(v).add(u);
        }

        for(int i=1; i<graph.size(); i++){
            Collections.sort(graph.get(i));
            Collections.reverse(graph.get(i));
        }

        bfs(r);
        for(int i = 1; i<visited.length; i++){
            System.out.println(visited[i]);
        }
    }
    static void bfs(int v) {  // V : 정점 집합, E : 간선 집합, R : 시작 정점
        Queue<Integer> q = new LinkedList<>();
        visited[v] = count++;  //# 시작 정점 R을 방문 했다고 표시한다.
        q.add(v);
        while (!q.isEmpty()){
            int a = q.poll();
            for(int i=0; i<graph.get(a).size(); i++){
                int newVertext = graph.get(a).get(i);
                if (visited[newVertext] == 0){
                    q.offer(newVertext);
                    visited[newVertext] = count++;
                }
            }
        }
    }
}