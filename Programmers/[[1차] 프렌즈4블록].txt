import java.util.*;
class Solution {
    public int solution(int m, int n, String[] board) {
        int answer = 0;
        while(true){
            boolean flag = false;
            boolean[][] visited = new boolean[m][n];
            for(int i=0; i<m-1; i++){
                for(int j=0; j<n-1; j++){
                    char first = board[i].charAt(j);
                    if(first != ' ' && first == board[i+1].charAt(j) && first == board[i].charAt(j+1) && first == board[i+1].charAt(j+1)){
                        flag = true;


                        visited[i][j] = true;
                        visited[i+1][j] = true;
                        visited[i][j+1] = true;
                        visited[i+1][j+1] = true;
                    }
                }
            }

            for(int i=0; i<m; i++){
                for(int j=0; j<n; j++){
                    if(visited[i][j]){
                        board[i] = board[i].substring(0, j) + " " + board[i].substring(j+1);
                        answer++;
                    }
                }
            }

            for(int i=m-1; i>0; i--){
                for(int j=0; j<n; j++){
                    if(board[i].charAt(j) == ' '){
                        int blank = 0;
                        int idx = i;
                        while(board[idx].charAt(j) == ' '){
                            blank++;
                            idx--;
                            if(idx <= 0) break;
                        }
                        char temp = board[idx].charAt(j);
                        board[idx] = board[idx].substring(0,j) + " " + board[idx].substring(j+1);
                        board[i] = board[i].substring(0,j) + temp + board[i].substring(j+1);
                    }
                }
            }


            if(!flag){
                break;
            }
        }
        // for(int i=0; i<m; i++){
        //        System.out.println(board[i].toString());
        //     }
        return answer;
    }

}