import java.util.*;
class Solution {
    public int[] solution(int rows, int columns, int[][] queries) {
        int[] answer = new int[queries.length];
        int map[][] = new int[rows][columns];
        int x[] = {0,1,0,-1};
        int y[] = {1,0,-1,0};
        int count = 1;

        for(int i=0; i<rows; i++){
            for(int j=0; j<columns; j++){
                map[i][j] = count++;
            }
        }

        for(int i=0; i<queries.length; i++){
            ArrayList<Integer> list = new ArrayList();
            int[] query = queries[i];
            int start[] = new int[]{query[0]-1, query[1]-1};
            int end[] = new int[]{query[2]-1, query[3]-1};
            int nowX = start[0];
            int nowY = start[1];
            int temp = map[nowX][nowY];
            int dir = 0;
            while(true){
                int nextX = nowX + x[dir];
                int nextY = nowY + y[dir];
                list.add(temp);
                if(nextX > end[0] || nextX < start[0] || nextY < start[1] || nextY > end[1]){

                    dir++;
                    nextX = nowX + x[dir];
                    nextY = nowY + y[dir];
                }
                int num = map[nextX][nextY];
                map[nextX][nextY] = temp;
                temp = num;

                if(nextX == start[0] && nextY == start[1]){
                    break;
                }
                nowX = nextX;
                nowY = nextY;
            }
            Collections.sort(list);
            answer[i] = list.get(0);
        }
        return answer;
    }
}